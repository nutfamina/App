import SwiftUI

struct TipsView: View {
    let tips: [String] = [
        "–í—Å–µ–≥–¥–∞ –ø—Ä–æ–±—É–π –µ–¥—É –Ω–∞ –≤–∫—É—Å –¥–æ –ø–æ–¥–∞—á–∏.",
        "–ù–µ –±–æ–π—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–∏–ø—Ä–∞–≤–∞–º–∏!",
        "–ì–æ—Ç–æ–≤—å –Ω–∞ —Å—Ä–µ–¥–Ω–µ–º –æ–≥–Ω–µ ‚Äî —ç—Ç–æ —Å–ø–∞—Å–∞–µ—Ç –æ—Ç –ø–æ–¥–≥–æ—Ä–∞–Ω–∏—è.",
        "–û–≤–æ—â–∏ –≤–∫—É—Å–Ω–µ–µ, –µ—Å–ª–∏ –∏—Ö —Å–ª–µ–≥–∫–∞ –ø–æ–¥–∂–∞—Ä–∏—Ç—å –Ω–∞ –æ–ª–∏–≤–∫–æ–≤–æ–º –º–∞—Å–ª–µ.",
        "–ò—Å–ø–æ–ª—å–∑—É–π —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±—ã—Ç—å –æ –≤—Ä–µ–º–µ–Ω–∏ –≤–∞—Ä–∫–∏."
    ]

    @State private var currentTip: String = ""
    @State private var likedTips: [String] = []

    var body: some View {
        NavigationStack {
            ZStack {
                Color.pink.opacity(0.1)
                    .ignoresSafeArea()

                ScrollView {
                    VStack(spacing: 20) {
                        // —Å–æ–≤–µ—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
                        if !currentTip.isEmpty {
                            VStack(spacing: 12) {
                                Text(currentTip)
                                    .padding()
                                    .frame(maxWidth: .infinity, alignment: .leading)
                                    .background(Color.white)
                                    .cornerRadius(12)
                                    .shadow(color: .gray.opacity(0.3), radius: 4, x: 0, y: 2)

                                // –∫–Ω–æ–ø–∫–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å
                                Button(action: {
                                    if likedTips.contains(currentTip) {
                                        likedTips.removeAll { $0 == currentTip }
                                    } else {
                                        likedTips.append(currentTip)
                                    }
                                }) {
                                    Text("‚ù§Ô∏è –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å")
                                        .padding(.horizontal)
                                        .padding(.vertical, 6)
                                        .background(Color.pink.opacity(0.2))
                                        .cornerRadius(8)
                                        .foregroundColor(.black)
                                }
                            }
                        }

                        // –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–π —Å–æ–≤–µ—Ç
                        Button(action: {
                            if let random = tips.randomElement() {
                                currentTip = random
                            }
                        }) {
                            Text("üí° –ü–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç–∏–∫")
                                .font(.headline)
                                .padding()
                                .frame(maxWidth: .infinity)
                                .background(Color.pink.opacity(0.3))
                                .cornerRadius(12)
                                .foregroundColor(.black)
                        }

                        // –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
                        if !likedTips.isEmpty {
                            Text("üíñ –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:")
                                .font(.headline)
                                .frame(maxWidth: .infinity, alignment: .leading)
                                .padding(.top)

                            VStack(spacing: 10) {
                                ForEach(likedTips, id: \.self) { tip in
                                    Text(tip)
                                        .padding()
                                        .frame(maxWidth: .infinity, alignment: .leading)
                                        .background(Color.white)
                                        .cornerRadius(12)
                                        .shadow(color: .gray.opacity(0.2), radius: 2, x: 0, y: 1)
                                }
                            }
                        }

                        Spacer()
                    }
                    .padding()
                }
            }
            .navigationTitle("–°–æ–≤–µ—Ç—ã")
            .onAppear {
                if currentTip.isEmpty, let random = tips.randomElement() {
                    currentTip = random
                }
            }
        }
    }
}
